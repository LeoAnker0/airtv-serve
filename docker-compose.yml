services:
  # Exposing APIs and file hosting to the internet via Cloudflare
  AIRTV_cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}

  airtvreverseproxy:
    image: nginx:latest
    container_name: airtv-reverse-proxy
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
    #ports:
    #  - "80:80"

  airtvapi:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    env_file:
      - .env
    #ports:
    #  - "8000:8080"
    #platform: linux/amd64
    #platform: linux/arm64

  airtvcron:
    build:
      context: ./src/cron
      dockerfile: Dockerfile
    volumes:
      - ./conf/cron.conf:/app/cron.conf
    env_file:
      - .env
    


  airtvbuilder:
    build:
      context: .
      dockerfile: buildSite.Dockerfile
      args:
        GITHUB_PAT: ${GITHUB_PAT}
    volumes:
      - build_volume:/build  # Use a named volume for the build directory

  airtvhost:
    image: nginx:latest
    container_name: airtv_host
    #ports:
    #  - "7000:80"
    volumes:
      - ./conf/host.nginx.conf:/etc/nginx/nginx.conf:ro
      - build_volume:/usr/share/nginx/html  # Mount the same volume into the web server


  airtvhooks:
    build: 
      context: .
      dockerfile: webhookd.Dockerfile
    container_name: airtv-hooks
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  
      - ./htpasswd:/etc/webhookd/.htpasswd 
    env_file:
      - .env
    environment:
      - WHD_HOOK_SCRIPTS=/scripts
      - WHD_HOOK_DEFAULT_EXT=.sh
      - WHD_HOOK_DEFAULT_MODE=buffered
      - WHD_HOOK_TIMEOUT=10
      - WHD_PASSWD_FILE=/etc/webhookd/.htpasswd  # Set auth file
      - WHD_LOG_MODULES=hook
      - GITHUB_PAT=${GITHUB_PAT}  # Pass the PAT
    #ports:
    #  - "9000:8080"     # Port where the webhook listens
    restart: unless-stopped

volumes:
  build_volume:

networks:
  default:
    name: airtv-tunnel
